name: Build

on:
  release:
    types: [published]

jobs:
  Build_Linux_Windows:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install fyne
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl1-mesa-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxi-dev \
            libxext-dev \
            libxfixes-dev \
            libasound2-dev \
            libxxf86vm-dev \
            pkg-config

      - name: Install UPX
        run: |
          sudo apt-get update
          sudo apt-get install -y upx

      - name: Install dependencies
        run: |
          sudo apt-get install -y gcc-multilib
          sudo apt-get install -y gcc-mingw-w64

      - name: Build Linux AMD64
        env:
          CGO_ENABLED: 1
        run: |
          fyne package --target linux --name tal_downloader_linux_amd64_${{ github.event.release.tag_name }} --release
          upx --best tal_downloader_linux_amd64_${{ github.event.release.tag_name }}

      - name: Build Windows
        env:
          CGO_ENABLED: 1
          CC: x86_64-w64-mingw32-gcc
          GOOS: windows
          GOARCH: amd64
        run: |
          fyne package --target windows --name tal_downloader_win64_${{ github.event.release.tag_name }}.exe --release
          upx --best tal_downloader_win64_${{ github.event.release.tag_name }}.exe

      - name: Release Linux
        uses: svenstaro/upload-release-action@v2
        with:
          tag: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.tag_name }}
          overwrite: true
          file: tal_downloader_linux_amd64_${{ github.event.release.tag_name }}

      - name: Release Windows
        uses: svenstaro/upload-release-action@v2
        with:
          tag: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.tag_name }}
          overwrite: true
          file: tal_downloader_win64_${{ github.event.release.tag_name }}.exe

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "Linux-Windows-build"
          path: |
            tal_downloader_linux_amd64_${{ github.event.release.tag_name }}
            tal_downloader_win64_${{ github.event.release.tag_name }}.exe

  Build_MacOS_ARM64_Android:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install fyne
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Install UPX
        run: brew install upx

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 12266719


      - name: Build macOS ARM64
        env:
          CGO_ENABLED: 1
        run: |
          fyne package --target darwin --name tal_downloader_macos_arm64_${{ github.event.release.tag_name }} --release
          upx --best tal_downloader_macos_arm64_${{ github.event.release.tag_name }}.app/Contents/MacOS/*
          zip -r -X tal_downloader_macos_arm64_${{ github.event.release.tag_name }}.zip tal_downloader_macos_arm64_${{ github.event.release.tag_name }}.app

      - name: Build Android ARM64
        env:
          CGO_ENABLED: 1
        run: |
          fyne package --target android/arm64 --name tal_downloader_android_arm64_${{ github.event.release.tag_name }}.apk --release --app-id com.itshenry.tal_downloader

      - name: Build Android ARM
        env:
          CGO_ENABLED: 1
        run: |
          fyne package --target android/arm --name tal_downloader_android_arm_${{ github.event.release.tag_name }}.apk --release --app-id com.itshenry.tal_downloader

      - name: Release macOS ARM64
        uses: svenstaro/upload-release-action@v2
        with:
          tag: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.tag_name }}
          overwrite: true
          file: tal_downloader_macos_arm64_${{ github.event.release.tag_name }}.zip

      - name: Release Android ARM64
        uses: svenstaro/upload-release-action@v2
        with:
          tag: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.tag_name }}
          overwrite: true
          file: tal_downloader_android_arm64_${{ github.event.release.tag_name }}.apk

      - name: Release Android ARM
        uses: svenstaro/upload-release-action@v2
        with:
          tag: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.tag_name }}
          overwrite: true
          file: tal_downloader_android_arm_${{ github.event.release.tag_name }}.apk

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "MacOS-ARM64-Android-build"
          path: |
            tal_downloader_macos_arm64_${{ github.event.release.tag_name }}.zip
            tal_downloader_android_arm64_${{ github.event.release.tag_name }}.apk
            tal_downloader_android_arm_${{ github.event.release.tag_name }}.apk

  Build_MacOS_Intel:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install fyne
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Install UPX
        run: brew install upx

      - name: Build macOS x86_64
        env:
          CGO_ENABLED: 1
        run: |
          fyne package --target darwin --name tal_downloader_macos_x86_64_${{ github.event.release.tag_name }} --release
          upx --best tal_downloader_macos_x86_64_${{ github.event.release.tag_name }}.app/Contents/MacOS/*
          zip -r -X tal_downloader_macos_x86_64_${{ github.event.release.tag_name }}.zip tal_downloader_macos_x86_64_${{ github.event.release.tag_name }}.app

      - name: Release macOS x86_64
        uses: svenstaro/upload-release-action@v2
        with:
          tag: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.tag_name }}
          overwrite: true
          file: tal_downloader_macos_x86_64_${{ github.event.release.tag_name }}.zip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "MacOS-x86_64-build"
          path: tal_downloader_macos_x86_64_${{ github.event.release.tag_name }}.zip