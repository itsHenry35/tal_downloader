name: Debug

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'CHANGELOG.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'CHANGELOG.md'
  workflow_dispatch:

jobs:
  Build_Linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl1-mesa-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxi-dev \
            libxext-dev \
            libxfixes-dev \
            libasound2-dev \
            libxxf86vm-dev \
            pkg-config

      - name: Update version info
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          BUILD_TIME=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            VERSION="[PR]$SHORT_COMMIT_ID"
          else
            VERSION="[CI]$SHORT_COMMIT_ID"
          fi
          
          # 替换 constants.go 文件中的版本信息
          sed -i "s/const Version = \"Debug\"/const Version = \"$VERSION\"/" constants/constants.go
          sed -i "s/const BuildTime = \"Unknown\"/const BuildTime = \"$BUILD_TIME\"/" constants/constants.go
          
          # 显示替换后的内容以便调试
          echo "Updated constants.go:"
          cat constants/constants.go

      - name: Build Linux AMD64
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: amd64
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            APPNAME=temp_linux_build
            FINAL_FILENAME=tal_downloader_linux_amd64_pr_$SHORT_COMMIT_ID
          else
            APPNAME=temp_linux_build
            FINAL_FILENAME=tal_downloader_linux_amd64_$SHORT_COMMIT_ID
          fi
          
          go build -ldflags="-s -w" -o $APPNAME
          mv $APPNAME $FINAL_FILENAME

      - name: Upload Artifacts For Linux
        uses: actions/upload-artifact@v4
        with:
          name: "Linux-build"
          path: |
            tal_downloader_linux_amd64_*

  Build_Windows:
    runs-on: windows-2019
    steps:
      - name: Disable Defender real-time monitoring
        run: |
          Set-MpPreference -DisableRealtimeMonitoring $true
        shell: pwsh
      
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install fyne
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Update version info
        shell: bash
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          BUILD_TIME=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            VERSION="[PR]$SHORT_COMMIT_ID"
          else
            VERSION="[CI]$SHORT_COMMIT_ID"
          fi
          
          # Windows 下的 sed 替换
          sed -i "s/const Version = \"Debug\"/const Version = \"$VERSION\"/" constants/constants.go
          sed -i "s/const BuildTime = \"Unknown\"/const BuildTime = \"$BUILD_TIME\"/" constants/constants.go
          
          # 显示替换后的内容以便调试
          echo "Updated constants.go:"
          cat constants/constants.go

      - name: Build Windows
        env:
          CGO_ENABLED: 1
          GOOS: windows
          GOARCH: amd64
        shell: bash
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            APPNAME="[PR]好未来课程下载器"
            FINAL_FILENAME=tal_downloader_win64_PR_$SHORT_COMMIT_ID.exe
          else
            APPNAME="[CI]好未来课程下载器"
            FINAL_FILENAME=tal_downloader_win64_$SHORT_COMMIT_ID.exe
          fi
          
          fyne package --target windows --name "$APPNAME"
          mv "$APPNAME.exe" "$FINAL_FILENAME"

      - name: Upload Artifacts For Windows
        uses: actions/upload-artifact@v4
        with:
          name: "Windows-build"
          path: |
            tal_downloader_win64_*.exe

  Build_MacOS_ARM64_Android:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install fyne
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 12266719

      - name: Update version info
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          BUILD_TIME=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            VERSION="[PR]$SHORT_COMMIT_ID"
          else
            VERSION="[CI]$SHORT_COMMIT_ID"
          fi
          
          # macOS 使用 sed -i ''
          sed -i '' "s/const Version = \"Debug\"/const Version = \"$VERSION\"/" constants/constants.go
          sed -i '' "s/const BuildTime = \"Unknown\"/const BuildTime = \"$BUILD_TIME\"/" constants/constants.go
          
          # 显示替换后的内容以便调试
          echo "Updated constants.go:"
          cat constants/constants.go

      - name: Build macOS ARM64
        env:
          CGO_ENABLED: 1
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            APPNAME="[PR]好未来课程下载器"
            FINAL_FILENAME=tal_downloader_macos_arm64_pr_$SHORT_COMMIT_ID
          else
            APPNAME="[CI]好未来课程下载器"
            FINAL_FILENAME=tal_downloader_macos_arm64_$SHORT_COMMIT_ID
          fi
          fyne package --target darwin --name "$APPNAME"
          mv "$APPNAME.app" "$FINAL_FILENAME.app"
          zip -r -X $FINAL_FILENAME.zip $FINAL_FILENAME.app

      - name: Build Android ARM64
        env:
          CGO_ENABLED: 1
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            APPNAME="[PR]好未来课程下载器"
            FILENAME="go_PR_________"
            FINAL_FILENAME=tal_downloader_android_arm64_pr_$SHORT_COMMIT_ID
          else
            APPNAME="[CI]好未来课程下载器"
            FILENAME="go_CI_________"
            FINAL_FILENAME=tal_downloader_android_arm64_$SHORT_COMMIT_ID
          fi
          fyne package --target android/arm64 --name "$APPNAME" --app-id com.itshenry.tal_downloader
          mv "$FILENAME.apk" "$FINAL_FILENAME.apk"

      - name: Build Android ARM
        env:
          CGO_ENABLED: 1
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            APPNAME="[PR]好未来课程下载器"
            FILENAME="go_PR_________"
            FINAL_FILENAME=tal_downloader_android_arm_pr_$SHORT_COMMIT_ID
          else
            APPNAME="[CI]好未来课程下载器"
            FILENAME="go_CI_________"
            FINAL_FILENAME=tal_downloader_android_arm_$SHORT_COMMIT_ID
          fi
          fyne package --target android/arm --name "$APPNAME" --app-id com.itshenry.tal_downloader
          mv "$FILENAME.apk" "$FINAL_FILENAME.apk"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "MacOS-ARM64-build"
          path: |
            tal_downloader_macos_arm64_*.zip
      - name: Upload Android Arm64 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "Android-ARM64-build"
          path: |
            tal_downloader_android_arm64_*.apk
      - name: Upload Android Arm Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "Android-ARM-build"
          path: |
            tal_downloader_android_arm_*.apk

  Build_MacOS_Intel:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install fyne
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Update version info
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          BUILD_TIME=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            VERSION="[PR]$SHORT_COMMIT_ID"
          else
            VERSION="[CI]$SHORT_COMMIT_ID"
          fi
          
          # macOS 使用 sed -i ''
          sed -i '' "s/const Version = \"Debug\"/const Version = \"$VERSION\"/" constants/constants.go
          sed -i '' "s/const BuildTime = \"Unknown\"/const BuildTime = \"$BUILD_TIME\"/" constants/constants.go
          
          # 显示替换后的内容以便调试
          echo "Updated constants.go:"
          cat constants/constants.go

      - name: Build macOS x86_64
        env:
          CGO_ENABLED: 1
        run: |
          SHORT_COMMIT_ID=${GITHUB_SHA::7}
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            APPNAME="[PR]好未来课程下载器"
            FINAL_FILENAME=tal_downloader_macos_x86_64_pr_$SHORT_COMMIT_ID
          else
            APPNAME="[CI]好未来课程下载器"
            FINAL_FILENAME=tal_downloader_macos_x86_64_$SHORT_COMMIT_ID
          fi
          fyne package --target darwin --name "$APPNAME"
          mv "$APPNAME.app" "$FINAL_FILENAME.app"
          zip -r -X $FINAL_FILENAME.zip $FINAL_FILENAME.app

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "MacOS-x86_64-build"
          path: tal_downloader_macos_x86_64_*.zip